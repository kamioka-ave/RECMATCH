@import "bootstrap/mixins";
@import "application/variables";

//border radius creator
@mixin border-radius($radius) {
  border-radius: $radius;
}

/*
 * Background Repeat + Position
 */
@mixin bg-option($repeat: no-repeat, $position: center) {
  background-repeat: $repeat;
  background-position: $position;
}

/*
 * CSS Animations based on animate.css
 */
@mixin animated($name, $duration) {
  -webkit-animation-name: $name;
  animation-name: $name;
  -webkit-animation-duration: $duration;
  animation-duration: $duration;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

/*
 * CSS Transform - Scale and Rotate
 */
@mixin scale-rotate($scale, $rotate) {
  -webkit-transform: scale($scale) rotate($rotate);
  -ms-transform: scale($scale) rotate($rotate);
  -o-transform: scale($scale) rotate($rotate);
  transform: scale($scale) rotate($rotate);
}

/*
 * User Select
 */
@mixin user-select ($val) {
  -webkit-touch-callout:  $val;
  -webkit-user-select:    $val;
  -khtml-user-select:     $val;
  -moz-user-select:       $val;
  -ms-user-select:        $val;
  user-select:            $val;
}

/*
 * Background Image Cover
 */
@mixin bg-cover($image) {
  background-image: url($image);
  background-repeat: no-repeat;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
  background-position: center;
}

@mixin bg-cover-inline() {
  background-repeat: no-repeat;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
  background-position: center;
}

/*
 * Tab Focus
 */
@mixin tab-focus() {
  outline: none !important;
}

/*
 * Pop-in Hover effects
 */
@mixin hover-pop($background: rgba(0,0,0,0.5), $radius: 0, $duration: 250ms, $zindex: 0) {
  @media (min-width: $screen-sm-min) {
    position: relative;

    &:before {
      left: 0;
      top: 0;
      content: "";
      position: absolute;
      width: 100%;
      height: 100%;
      transform: scale3d(0,0,0);
      @include transition(all);
      @include transition-duration($duration);
      @include backface-visibility(hidden);
      background-color: $background;
      z-index: $zindex;
      border-radius: $radius;
      @include opacity(0);
    }

    &:hover:before,
    &.open:before {
      transform: scale3d(1,1,1);
      @include opacity(1);
    }
  }
}

/*
 *  Override Bootstrap Button Mixin
 */
@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;

  &:hover,
  &:focus,
  &.focus,
  &:active,
  .open > &.dropdown-toggle {
    color: $color;
    background-color: $background;
    border-color: transparent;
    //border-color: $border;

    &:hover,
    &:focus,
    &.focus {
      color: $color;
      background-color: $background;
      border-color: transparent
      //border-color: $border;
    }
  }
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    background-image: none;
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &.focus,
    &:active {
      background-color: $background;
      border-color: $border;
    }
  }

  .badge {
    color: $background;
    background-color: $color;
  }
}

@mixin preview-image($width, $height) {
  display: inline-block;
  background-color: #ccc;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  margin-bottom: 10px;
  width: $width;
  height: $height;
}

@mixin circle($size) {
  display: inline-block;
  height: $size;
  width: $size;
  line-height: $size;
  font-size: $size * 0.6;
  text-align: center;
  border-radius: 100%;
  background-color: #777;

  i {
    color: #fff;
  }

  &:hover {
    -webkit-transition: all 300ms;
    -moz-transition: all 300ms;
    -ms-transition: all 300ms;
    -o-transition: all 300ms;
    transition: all 300ms;
    opacity: 0.6;
  }
}

@mixin circle-with-bg($size, $background-color) {
  display: inline-block;
  height: $size;
  width: $size;
  line-height: $size;
  font-size: $size * 0.6;
  text-align: center;
  border-radius: 100%;
  background-color: $background-color;

  i {
    color: #fff;
  }

  &:hover {
    -webkit-transition: all 300ms;
    -moz-transition: all 300ms;
    -ms-transition: all 300ms;
    -o-transition: all 300ms;
    transition: all 300ms;
    opacity: 0.6;
  }
}

@mixin prefixer($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    @if $prefix == webkit {
      @if $prefix-for-webkit {
        -webkit-#{$property}: $value;
      }
    } @else if $prefix == moz {
      @if $prefix-for-mozilla {
        -moz-#{$property}: $value;
      }
    } @else if $prefix == ms {
      @if $prefix-for-microsoft {
        -ms-#{$property}: $value;
      }
    } @else if $prefix == o {
      @if $prefix-for-opera {
        -o-#{$property}: $value;
      }
    } @else if $prefix == spec {
      @if $prefix-for-spec {
        #{$property}: $value;
      }
    } @else  {
      @warn "Unrecognized prefix: #{$prefix}";
    }
  }
}

@mixin transform($property: none) {
  @include prefixer(transform, $property, webkit moz ms o spec);
}

@mixin backface-visibility($visibility) {
  @include prefixer(backface-visibility, $visibility, webkit spec);
}

// center vertically and/or horizontally an absolute positioned element
@mixin center($xy:xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include transform(translateX(-50%) translateY(-50%));
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    @include transform(translateX(-50%));
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    @include transform(translateY(-50%));
  }
}

// antialiasing mode font rendering
@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin tablet {
  @media only screen and (min-width: #{$screen-sm}) {
    @content;
  }
}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

@mixin mobile {
  @media(max-width: $screen-xs) {
    @content;
  }
}

